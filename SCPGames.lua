--// Obfuscated by AzureWave - discord.gg/DGDjQn7c3w

return (function()local AzureWavelIIIIlIl = "\49\50\51\51\52\53\54\55\56\56\56\56\53\52\50\50\54\55\56\43\43\95\35\194\163\194\163\64\38\43\40";local AzureWavelIIIIlIl = "\49\50\51\51\52\53\54\55\56\56\56\56\53\52\50\50\54\55\56\43\43\95\35\194\163\194\163\64\38\43\40";local AzureWavelIIIIlIl = "\49\50\51\51\52\53\54\55\56\56\56\56\53\52\50\50\54\55\56\43\43\95\35\194\163\194\163\64\38\43\40";local AzureWavelIIllllI=36;local AzureWavelIIlllIl=111;local AzureWavelIIlllII=3;local AzureWavelIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local AzureWavelIIlllIl=249;local AzureWavelIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local AzureWavelIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local AzureWavelIIllIIl='\49\50\51\51\52\53\54\55\56\56\56\56\53\52\50\50\54\55\56\43\43\95\35\194\163\194\163\64\38\43\40';local AzureWavelIIlIIIllocal AzureWavelIIllIIl='\49\50\51\51\52\53\54\55\56\56\56\56\53\52\50\50\54\55\56\43\43\95\35\194\163\194\163\64\38\43\40';local AzureWavelIIllIll='\89\107\82\108\81\121\57\69\101\72\78\107\81\68\90\108\73\105\115\53\79\122\57\106\81\122\74\68\98\88\116\89\83\86\86\113\83\49\69\55\73\48\57\80\75\121\86\118\82\109\49\106\73\84\70\121\84\50\82\74\77\108\104\48\74\83\112\74\97\83\49\66\85\83\81\48\97\51\85\112\83\121\69\109\99\105\115\56\77\105\70\118\90\109\52\105\85\48\112\53\77\105\82\118\100\85\90\48\80\68\56\55\74\122\86\104\78\68\107\118\86\68\81\117\74\110\103\107\73\50\100\113\84\85\85\118\84\67\107\118\73\51\116\87\86\87\78\80\85\72\90\79\90\49\49\115\75\88\116\84\89\107\74\109\85\72\120\105\89\110\89\55\88\48\115\105\77\106\86\67\100\84\73\47\85\50\89\114\98\109\115\108\77\122\108\70\97\83\82\65\79\84\82\78\100\87\48\113\75\87\115\118\89\106\74\100\89\105\48\122\89\50\78\86\86\71\78\76\83\87\48\117\100\67\48\114\83\67\100\115\97\122\49\52\77\70\70\54\99\67\116\86\97\70\73\121\82\70\82\71\80\84\78\86\79\69\70\57\80\122\111\113\74\122\56\50\98\49\108\52\100\107\89\55\74\105\115\115\85\51\116\111\79\50\74\73\102\69\111\48\83\67\107\53\84\106\116\89\80\122\82\67\75\122\78\53\101\86\56\111\87\86\86\66\83\108\115\119\90\83\108\57\73\87\56\108\77\72\77\116\84\68\78\70\77\69\56\47\78\49\89\53\85\88\66\51\101\48\78\79\101\67\57\97\102\70\112\51\100\48\108\79\79\121\57\79\81\67\70\102\81\121\100\110\81\72\100\102\89\88\81\122\97\108\100\83\82\106\86\88\75\50\74\54\86\122\81\121\75\70\90\108\97\87\73\117\98\68\81\106\83\72\78\66\87\105\116\73\99\85\78\120\85\83\49\49\100\122\86\54\73\122\108\72\88\50\57\113\78\51\107\110\100\72\89\57\90\48\108\100\77\122\100\48\77\83\100\112\77\83\74\122\89\106\73\112\102\86\69\109\77\109\100\106\77\50\107\54\83\84\116\112\85\110\112\71\83\48\57\85\82\48\56\57\75\50\78\108\101\85\78\70\82\85\108\56\79\108\100\109\98\50\57\108\79\88\103\113\99\72\48\106\74\84\90\113\75\72\70\113\81\108\116\102\73\122\112\75\81\49\108\74\77\71\119\117\87\122\53\86\89\110\86\75\84\105\115\109\99\71\112\88\88\83\104\84\97\121\112\65\81\88\111\51\77\67\57\121\102\72\90\50\82\105\104\104\81\110\86\105\85\51\90\107\85\121\57\70\97\70\78\114\81\106\103\108\81\72\112\75\89\107\82\76\100\71\116\50\87\105\82\120\97\88\77\106\98\68\90\112\88\86\89\114\83\110\112\116\89\50\82\79\76\109\53\54\73\86\90\49\73\87\86\70\77\109\57\52\100\108\48\104\73\122\77\110\89\86\74\88\84\48\56\117\99\67\90\51\97\51\90\81\99\121\108\53\97\69\108\52\80\84\86\117\73\48\70\100\101\110\69\111\81\72\78\86\82\121\49\107\75\107\66\89\97\48\82\105\82\121\100\82\87\85\112\100\83\72\108\83\88\122\115\47\75\49\90\65\84\105\53\57\99\86\86\81\80\122\57\78\102\72\120\79\74\88\120\114\100\70\78\107\101\50\86\119\89\109\120\85\84\51\104\104\79\83\112\76\101\122\66\121\82\121\86\109\86\106\104\77\87\67\116\112\97\48\112\77\80\106\69\48\84\72\108\53\87\110\70\109\76\122\66\70\82\48\70\116\80\71\104\78\74\108\56\109\88\87\116\118\83\107\78\65\97\49\103\111\73\83\48\121\81\106\77\55\86\49\116\52\87\69\57\88\85\68\74\73\85\48\53\55\76\84\119\43\77\106\53\111\85\122\78\88\87\50\89\112\80\105\49\86\76\122\120\83\80\108\74\122\97\67\119\49\79\87\103\48\97\108\82\50\85\110\104\75\98\85\108\71\85\48\103\47\75\49\74\85\101\71\116\80\75\71\112\109\82\106\57\89\100\109\115\48\80\72\82\79\88\122\116\77\84\88\85\56\73\107\49\73\76\49\108\106\99\68\49\88\88\122\104\85\99\108\48\107\81\49\56\54\89\110\104\71\80\86\108\71\89\84\57\52\80\121\108\86\75\72\48\105\100\86\103\108\80\68\116\57\87\108\112\67\99\72\99\52\84\68\49\72\77\110\70\86\102\71\112\78\86\86\77\118\82\84\82\79\76\107\120\89\90\67\78\67\85\85\108\82\80\87\69\56\76\50\77\50\89\88\116\76\79\88\115\119\86\85\86\108\99\48\78\105\87\69\104\57\85\68\112\116\78\86\103\122\78\50\56\118\76\121\120\102\81\110\74\52\100\108\56\106\75\49\112\53\87\121\116\74\100\72\116\109\76\51\74\106\74\68\108\102\75\84\107\43\84\107\116\85\76\71\112\121\86\72\104\86\79\70\89\51\87\105\116\104\88\48\73\50\77\87\100\122\75\67\53\119\84\121\77\104\81\84\112\51\90\50\100\55\88\48\69\109\73\85\108\119\86\107\66\104\85\83\74\102\73\85\77\106\99\72\73\112\101\72\116\119\74\110\78\83\81\83\73\48\78\50\73\56\99\121\48\109\73\107\73\57\79\85\108\120\83\67\119\114\98\87\74\78\81\108\103\107\75\107\112\114\84\48\111\111\76\105\112\122\74\105\48\106\85\85\86\66\76\49\86\90\83\49\57\65\74\83\52\117\86\50\78\50\97\105\52\118\81\50\111\56\78\48\57\119\98\105\116\83\100\108\100\80\87\88\112\104\89\85\82\107\89\83\116\71\87\68\119\121\88\86\78\108\100\108\86\54\100\83\73\114\75\122\82\50\77\70\69\122\78\70\65\54\98\83\85\117\97\88\70\80\99\51\65\51\85\107\73\120\97\88\104\111\99\84\86\112\76\84\82\78\100\86\104\51\85\50\82\116\74\83\73\107\77\70\65\116\99\68\120\106\73\50\52\119\77\68\112\107\79\70\77\118\78\110\65\118\99\68\108\56\87\86\90\108\79\122\100\78\89\88\116\79\80\69\56\50\99\109\70\117\84\121\57\108\101\83\53\71\83\69\90\121\90\50\89\112\87\109\108\73\87\122\120\80\98\48\100\84\99\84\57\120\76\51\86\84\85\109\53\112\74\69\119\118\84\83\69\48\99\50\52\117\98\72\65\53\100\109\108\112\87\106\99\49\98\110\86\65\82\86\100\77\83\122\111\118\89\105\116\120\80\86\90\109\100\71\103\113\101\67\115\109\86\72\77\110\77\70\100\88\75\110\112\69\82\106\74\82\87\84\100\117\90\67\57\111\76\121\49\87\84\49\90\52\90\84\70\113\90\69\73\52\84\105\82\106\74\84\100\67\89\87\85\49\78\107\69\120\75\48\73\117\74\71\119\117\100\121\49\74\101\109\57\100\73\83\115\106\99\50\116\67\79\106\99\114\87\48\57\73\101\83\115\49\81\70\66\84\85\88\90\76\78\121\82\88\76\110\119\116\76\48\107\50\79\122\70\111\82\86\85\107\88\51\89\122\76\49\111\108\75\121\57\78\89\87\52\51\82\67\108\102\77\48\89\53\79\105\90\111\99\86\81\50\98\87\100\71\100\86\90\70\75\51\81\48\97\51\90\106\84\109\120\81\81\86\116\68\75\67\112\80\86\110\90\76\89\84\57\70\83\84\120\73\102\70\100\80\81\105\100\102\82\121\78\120\76\69\66\90\82\51\49\87\85\69\78\77\83\49\77\119\88\121\116\55\90\67\112\116\101\69\69\105\97\106\104\73\89\109\53\54\74\107\85\118\81\106\78\81\85\107\103\56\76\71\112\104\99\107\65\104\79\49\108\121\80\85\100\86\81\88\104\85\81\49\104\49\102\85\56\120\100\83\70\52\74\109\107\57\76\87\100\56\100\108\108\85\97\48\48\43\85\48\100\67\101\107\49\66\76\105\70\53\73\87\57\108\90\71\108\97\80\109\85\50\74\110\73\113\75\109\90\75\73\121\104\122\85\87\53\116\82\106\49\115\87\122\53\111\79\68\100\53\83\83\48\43\80\122\66\104\79\108\78\74\99\49\104\116\76\109\56\120\86\121\111\50\76\87\120\116\84\107\100\117\97\72\69\104\82\107\103\55\99\83\100\87\98\83\81\104\99\84\99\51\81\84\73\54\79\70\116\69\82\83\74\113\98\72\86\88\74\122\65\47\86\88\111\105\82\83\52\52\77\87\107\50\79\71\56\109\102\72\66\108\87\121\49\80\97\87\74\78\73\110\89\55\80\49\103\120\102\71\99\117\75\86\65\118\90\51\78\88\78\110\85\105\82\88\70\75\73\109\116\84\101\51\70\54\90\85\104\104\80\121\115\110\84\109\52\54\77\86\108\83\78\86\77\106\73\87\49\102\87\67\48\122\83\68\81\55\80\109\100\115\85\72\66\109\74\51\66\57\82\72\89\53\73\48\66\109\79\106\100\116\88\50\82\117\87\49\99\61';local AzureWavelIIlIIlI=function(a,b)local c=AzureWavelIIlIlIl(AzureWavelIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,AzureWavelIIlIllI(b))return AzureWavelIIlIllI(d)end;local AzureWavelIIllIll='\89\107\82\108\81\121\57\69\101\72\78\107\81\68\90\108\73\105\115\53\79\122\57\106\81\122\74\68\98\88\116\89\83\86\86\113\83\49\69\55\73\48\57\80\75\121\86\118\82\109\49\106\73\84\70\121\84\50\82\74\77\108\104\48\74\83\112\74\97\83\49\66\85\83\81\48\97\51\85\112\83\121\69\109\99\105\115\56\77\105\70\118\90\109\52\105\85\48\112\53\77\105\82\118\100\85\90\48\80\68\56\55\74\122\86\104\78\68\107\118\86\68\81\117\74\110\103\107\73\50\100\113\84\85\85\118\84\67\107\118\73\51\116\87\86\87\78\80\85\72\90\79\90\49\49\115\75\88\116\84\89\107\74\109\85\72\120\105\89\110\89\55\88\48\115\105\77\106\86\67\100\84\73\47\85\50\89\114\98\109\115\108\77\122\108\70\97\83\82\65\79\84\82\78\100\87\48\113\75\87\115\118\89\106\74\100\89\105\48\122\89\50\78\86\86\71\78\76\83\87\48\117\100\67\48\114\83\67\100\115\97\122\49\52\77\70\70\54\99\67\116\86\97\70\73\121\82\70\82\71\80\84\78\86\79\69\70\57\80\122\111\113\74\122\56\50\98\49\108\52\100\107\89\55\74\105\115\115\85\51\116\111\79\50\74\73\102\69\111\48\83\67\107\53\84\106\116\89\80\122\82\67\75\122\78\53\101\86\56\111\87\86\86\66\83\108\115\119\90\83\108\57\73\87\56\108\77\72\77\116\84\68\78\70\77\69\56\47\78\49\89\53\85\88\66\51\101\48\78\79\101\67\57\97\102\70\112\51\100\48\108\79\79\121\57\79\81\67\70\102\81\121\100\110\81\72\100\102\89\88\81\122\97\108\100\83\82\106\86\88\75\50\74\54\86\122\81\121\75\70\90\108\97\87\73\117\98\68\81\106\83\72\78\66\87\105\116\73\99\85\78\120\85\83\49\49\100\122\86\54\73\122\108\72\88\50\57\113\78\51\107\110\100\72\89\57\90\48\108\100\77\122\100\48\77\83\100\112\77\83\74\122\89\106\73\112\102\86\69\109\77\109\100\106\77\50\107\54\83\84\116\112\85\110\112\71\83\48\57\85\82\48\56\57\75\50\78\108\101\85\78\70\82\85\108\56\79\108\100\109\98\50\57\108\79\88\103\113\99\72\48\106\74\84\90\113\75\72\70\113\81\108\116\102\73\122\112\75\81\49\108\74\77\71\119\117\87\122\53\86\89\110\86\75\84\105\115\109\99\71\112\88\88\83\104\84\97\121\112\65\81\88\111\51\77\67\57\121\102\72\90\50\82\105\104\104\81\110\86\105\85\51\90\107\85\121\57\70\97\70\78\114\81\106\103\108\81\72\112\75\89\107\82\76\100\71\116\50\87\105\82\120\97\88\77\106\98\68\90\112\88\86\89\114\83\110\112\116\89\50\82\79\76\109\53\54\73\86\90\49\73\87\86\70\77\109\57\52\100\108\48\104\73\122\77\110\89\86\74\88\84\48\56\117\99\67\90\51\97\51\90\81\99\121\108\53\97\69\108\52\80\84\86\117\73\48\70\100\101\110\69\111\81\72\78\86\82\121\49\107\75\107\66\89\97\48\82\105\82\121\100\82\87\85\112\100\83\72\108\83\88\122\115\47\75\49\90\65\84\105\53\57\99\86\86\81\80\122\57\78\102\72\120\79\74\88\120\114\100\70\78\107\101\50\86\119\89\109\120\85\84\51\104\104\79\83\112\76\101\122\66\121\82\121\86\109\86\106\104\77\87\67\116\112\97\48\112\77\80\106\69\48\84\72\108\53\87\110\70\109\76\122\66\70\82\48\70\116\80\71\104\78\74\108\56\109\88\87\116\118\83\107\78\65\97\49\103\111\73\83\48\121\81\106\77\55\86\49\116\52\87\69\57\88\85\68\74\73\85\48\53\55\76\84\119\43\77\106\53\111\85\122\78\88\87\50\89\112\80\105\49\86\76\122\120\83\80\108\74\122\97\67\119\49\79\87\103\48\97\108\82\50\85\110\104\75\98\85\108\71\85\48\103\47\75\49\74\85\101\71\116\80\75\71\112\109\82\106\57\89\100\109\115\48\80\72\82\79\88\122\116\77\84\88\85\56\73\107\49\73\76\49\108\106\99\68\49\88\88\122\104\85\99\108\48\107\81\49\56\54\89\110\104\71\80\86\108\71\89\84\57\52\80\121\108\86\75\72\48\105\100\86\103\108\80\68\116\57\87\108\112\67\99\72\99\52\84\68\49\72\77\110\70\86\102\71\112\78\86\86\77\118\82\84\82\79\76\107\120\89\90\67\78\67\85\85\108\82\80\87\69\56\76\50\77\50\89\88\116\76\79\88\115\119\86\85\86\108\99\48\78\105\87\69\104\57\85\68\112\116\78\86\103\122\78\50\56\118\76\121\120\102\81\110\74\52\100\108\56\106\75\49\112\53\87\121\116\74\100\72\116\109\76\51\74\106\74\68\108\102\75\84\107\43\84\107\116\85\76\71\112\121\86\72\104\86\79\70\89\51\87\105\116\104\88\48\73\50\77\87\100\122\75\67\53\119\84\121\77\104\81\84\112\51\90\50\100\55\88\48\69\109\73\85\108\119\86\107\66\104\85\83\74\102\73\85\77\106\99\72\73\112\101\72\116\119\74\110\78\83\81\83\73\48\78\50\73\56\99\121\48\109\73\107\73\57\79\85\108\120\83\67\119\114\98\87\74\78\81\108\103\107\75\107\112\114\84\48\111\111\76\105\112\122\74\105\48\106\85\85\86\66\76\49\86\90\83\49\57\65\74\83\52\117\86\50\78\50\97\105\52\118\81\50\111\56\78\48\57\119\98\105\116\83\100\108\100\80\87\88\112\104\89\85\82\107\89\83\116\71\87\68\119\121\88\86\78\108\100\108\86\54\100\83\73\114\75\122\82\50\77\70\69\122\78\70\65\54\98\83\85\117\97\88\70\80\99\51\65\51\85\107\73\120\97\88\104\111\99\84\86\112\76\84\82\78\100\86\104\51\85\50\82\116\74\83\73\107\77\70\65\116\99\68\120\106\73\50\52\119\77\68\112\107\79\70\77\118\78\110\65\118\99\68\108\56\87\86\90\108\79\122\100\78\89\88\116\79\80\69\56\50\99\109\70\117\84\121\57\108\101\83\53\71\83\69\90\121\90\50\89\112\87\109\108\73\87\122\120\80\98\48\100\84\99\84\57\120\76\51\86\84\85\109\53\112\74\69\119\118\84\83\69\48\99\50\52\117\98\72\65\53\100\109\108\112\87\106\99\49\98\110\86\65\82\86\100\77\83\122\111\118\89\105\116\120\80\86\90\109\100\71\103\113\101\67\115\109\86\72\77\110\77\70\100\88\75\110\112\69\82\106\74\82\87\84\100\117\90\67\57\111\76\121\49\87\84\49\90\52\90\84\70\113\90\69\73\52\84\105\82\106\74\84\100\67\89\87\85\49\78\107\69\120\75\48\73\117\74\71\119\117\100\121\49\74\101\109\57\100\73\83\115\106\99\50\116\67\79\106\99\114\87\48\57\73\101\83\115\49\81\70\66\84\85\88\90\76\78\121\82\88\76\110\119\116\76\48\107\50\79\122\70\111\82\86\85\107\88\51\89\122\76\49\111\108\75\121\57\78\89\87\52\51\82\67\108\102\77\48\89\53\79\105\90\111\99\86\81\50\98\87\100\71\100\86\90\70\75\51\81\48\97\51\90\106\84\109\120\81\81\86\116\68\75\67\112\80\86\110\90\76\89\84\57\70\83\84\120\73\102\70\100\80\81\105\100\102\82\121\78\120\76\69\66\90\82\51\49\87\85\69\78\77\83\49\77\119\88\121\116\55\90\67\112\116\101\69\69\105\97\106\104\73\89\109\53\54\74\107\85\118\81\106\78\81\85\107\103\56\76\71\112\104\99\107\65\104\79\49\108\121\80\85\100\86\81\88\104\85\81\49\104\49\102\85\56\120\100\83\70\52\74\109\107\57\76\87\100\56\100\108\108\85\97\48\48\43\85\48\100\67\101\107\49\66\76\105\70\53\73\87\57\108\90\71\108\97\80\109\85\50\74\110\73\113\75\109\90\75\73\121\104\122\85\87\53\116\82\106\49\115\87\122\53\111\79\68\100\53\83\83\48\43\80\122\66\104\79\108\78\74\99\49\104\116\76\109\56\120\86\121\111\50\76\87\120\116\84\107\100\117\97\72\69\104\82\107\103\55\99\83\100\87\98\83\81\104\99\84\99\51\81\84\73\54\79\70\116\69\82\83\74\113\98\72\86\88\74\122\65\47\86\88\111\105\82\83\52\52\77\87\107\50\79\71\56\109\102\72\66\108\87\121\49\80\97\87\74\78\73\110\89\55\80\49\103\120\102\71\99\117\75\86\65\118\90\51\78\88\78\110\85\105\82\88\70\75\73\109\116\84\101\51\70\54\90\85\104\104\80\121\115\110\84\109\52\54\77\86\108\83\78\86\77\106\73\87\49\102\87\67\48\122\83\68\81\55\80\109\100\115\85\72\66\109\74\51\66\57\82\72\89\53\73\48\66\109\79\106\100\116\88\50\82\117\87\49\99\61';local AzureWavelIIllIll='\89\107\82\108\81\121\57\69\101\72\78\107\81\68\90\108\73\105\115\53\79\122\57\106\81\122\74\68\98\88\116\89\83\86\86\113\83\49\69\55\73\48\57\80\75\121\86\118\82\109\49\106\73\84\70\121\84\50\82\74\77\108\104\48\74\83\112\74\97\83\49\66\85\83\81\48\97\51\85\112\83\121\69\109\99\105\115\56\77\105\70\118\90\109\52\105\85\48\112\53\77\105\82\118\100\85\90\48\80\68\56\55\74\122\86\104\78\68\107\118\86\68\81\117\74\110\103\107\73\50\100\113\84\85\85\118\84\67\107\118\73\51\116\87\86\87\78\80\85\72\90\79\90\49\49\115\75\88\116\84\89\107\74\109\85\72\120\105\89\110\89\55\88\48\115\105\77\106\86\67\100\84\73\47\85\50\89\114\98\109\115\108\77\122\108\70\97\83\82\65\79\84\82\78\100\87\48\113\75\87\115\118\89\106\74\100\89\105\48\122\89\50\78\86\86\71\78\76\83\87\48\117\100\67\48\114\83\67\100\115\97\122\49\52\77\70\70\54\99\67\116\86\97\70\73\121\82\70\82\71\80\84\78\86\79\69\70\57\80\122\111\113\74\122\56\50\98\49\108\52\100\107\89\55\74\105\115\115\85\51\116\111\79\50\74\73\102\69\111\48\83\67\107\53\84\106\116\89\80\122\82\67\75\122\78\53\101\86\56\111\87\86\86\66\83\108\115\119\90\83\108\57\73\87\56\108\77\72\77\116\84\68\78\70\77\69\56\47\78\49\89\53\85\88\66\51\101\48\78\79\101\67\57\97\102\70\112\51\100\48\108\79\79\121\57\79\81\67\70\102\81\121\100\110\81\72\100\102\89\88\81\122\97\108\100\83\82\106\86\88\75\50\74\54\86\122\81\121\75\70\90\108\97\87\73\117\98\68\81\106\83\72\78\66\87\105\116\73\99\85\78\120\85\83\49\49\100\122\86\54\73\122\108\72\88\50\57\113\78\51\107\110\100\72\89\57\90\48\108\100\77\122\100\48\77\83\100\112\77\83\74\122\89\106\73\112\102\86\69\109\77\109\100\106\77\50\107\54\83\84\116\112\85\110\112\71\83\48\57\85\82\48\56\57\75\50\78\108\101\85\78\70\82\85\108\56\79\108\100\109\98\50\57\108\79\88\103\113\99\72\48\106\74\84\90\113\75\72\70\113\81\108\116\102\73\122\112\75\81\49\108\74\77\71\119\117\87\122\53\86\89\110\86\75\84\105\115\109\99\71\112\88\88\83\104\84\97\121\112\65\81\88\111\51\77\67\57\121\102\72\90\50\82\105\104\104\81\110\86\105\85\51\90\107\85\121\57\70\97\70\78\114\81\106\103\108\81\72\112\75\89\107\82\76\100\71\116\50\87\105\82\120\97\88\77\106\98\68\90\112\88\86\89\114\83\110\112\116\89\50\82\79\76\109\53\54\73\86\90\49\73\87\86\70\77\109\57\52\100\108\48\104\73\122\77\110\89\86\74\88\84\48\56\117\99\67\90\51\97\51\90\81\99\121\108\53\97\69\108\52\80\84\86\117\73\48\70\100\101\110\69\111\81\72\78\86\82\121\49\107\75\107\66\89\97\48\82\105\82\121\100\82\87\85\112\100\83\72\108\83\88\122\115\47\75\49\90\65\84\105\53\57\99\86\86\81\80\122\57\78\102\72\120\79\74\88\120\114\100\70\78\107\101\50\86\119\89\109\120\85\84\51\104\104\79\83\112\76\101\122\66\121\82\121\86\109\86\106\104\77\87\67\116\112\97\48\112\77\80\106\69\48\84\72\108\53\87\110\70\109\76\122\66\70\82\48\70\116\80\71\104\78\74\108\56\109\88\87\116\118\83\107\78\65\97\49\103\111\73\83\48\121\81\106\77\55\86\49\116\52\87\69\57\88\85\68\74\73\85\48\53\55\76\84\119\43\77\106\53\111\85\122\78\88\87\50\89\112\80\105\49\86\76\122\120\83\80\108\74\122\97\67\119\49\79\87\103\48\97\108\82\50\85\110\104\75\98\85\108\71\85\48\103\47\75\49\74\85\101\71\116\80\75\71\112\109\82\106\57\89\100\109\115\48\80\72\82\79\88\122\116\77\84\88\85\56\73\107\49\73\76\49\108\106\99\68\49\88\88\122\104\85\99\108\48\107\81\49\56\54\89\110\104\71\80\86\108\71\89\84\57\52\80\121\108\86\75\72\48\105\100\86\103\108\80\68\116\57\87\108\112\67\99\72\99\52\84\68\49\72\77\110\70\86\102\71\112\78\86\86\77\118\82\84\82\79\76\107\120\89\90\67\78\67\85\85\108\82\80\87\69\56\76\50\77\50\89\88\116\76\79\88\115\119\86\85\86\108\99\48\78\105\87\69\104\57\85\68\112\116\78\86\103\122\78\50\56\118\76\121\120\102\81\110\74\52\100\108\56\106\75\49\112\53\87\121\116\74\100\72\116\109\76\51\74\106\74\68\108\102\75\84\107\43\84\107\116\85\76\71\112\121\86\72\104\86\79\70\89\51\87\105\116\104\88\48\73\50\77\87\100\122\75\67\53\119\84\121\77\104\81\84\112\51\90\50\100\55\88\48\69\109\73\85\108\119\86\107\66\104\85\83\74\102\73\85\77\106\99\72\73\112\101\72\116\119\74\110\78\83\81\83\73\48\78\50\73\56\99\121\48\109\73\107\73\57\79\85\108\120\83\67\119\114\98\87\74\78\81\108\103\107\75\107\112\114\84\48\111\111\76\105\112\122\74\105\48\106\85\85\86\66\76\49\86\90\83\49\57\65\74\83\52\117\86\50\78\50\97\105\52\118\81\50\111\56\78\48\57\119\98\105\116\83\100\108\100\80\87\88\112\104\89\85\82\107\89\83\116\71\87\68\119\121\88\86\78\108\100\108\86\54\100\83\73\114\75\122\82\50\77\70\69\122\78\70\65\54\98\83\85\117\97\88\70\80\99\51\65\51\85\107\73\120\97\88\104\111\99\84\86\112\76\84\82\78\100\86\104\51\85\50\82\116\74\83\73\107\77\70\65\116\99\68\120\106\73\50\52\119\77\68\112\107\79\70\77\118\78\110\65\118\99\68\108\56\87\86\90\108\79\122\100\78\89\88\116\79\80\69\56\50\99\109\70\117\84\121\57\108\101\83\53\71\83\69\90\121\90\50\89\112\87\109\108\73\87\122\120\80\98\48\100\84\99\84\57\120\76\51\86\84\85\109\53\112\74\69\119\118\84\83\69\48\99\50\52\117\98\72\65\53\100\109\108\112\87\106\99\49\98\110\86\65\82\86\100\77\83\122\111\118\89\105\116\120\80\86\90\109\100\71\103\113\101\67\115\109\86\72\77\110\77\70\100\88\75\110\112\69\82\106\74\82\87\84\100\117\90\67\57\111\76\121\49\87\84\49\90\52\90\84\70\113\90\69\73\52\84\105\82\106\74\84\100\67\89\87\85\49\78\107\69\120\75\48\73\117\74\71\119\117\100\121\49\74\101\109\57\100\73\83\115\106\99\50\116\67\79\106\99\114\87\48\57\73\101\83\115\49\81\70\66\84\85\88\90\76\78\121\82\88\76\110\119\116\76\48\107\50\79\122\70\111\82\86\85\107\88\51\89\122\76\49\111\108\75\121\57\78\89\87\52\51\82\67\108\102\77\48\89\53\79\105\90\111\99\86\81\50\98\87\100\71\100\86\90\70\75\51\81\48\97\51\90\106\84\109\120\81\81\86\116\68\75\67\112\80\86\110\90\76\89\84\57\70\83\84\120\73\102\70\100\80\81\105\100\102\82\121\78\120\76\69\66\90\82\51\49\87\85\69\78\77\83\49\77\119\88\121\116\55\90\67\112\116\101\69\69\105\97\106\104\73\89\109\53\54\74\107\85\118\81\106\78\81\85\107\103\56\76\71\112\104\99\107\65\104\79\49\108\121\80\85\100\86\81\88\104\85\81\49\104\49\102\85\56\120\100\83\70\52\74\109\107\57\76\87\100\56\100\108\108\85\97\48\48\43\85\48\100\67\101\107\49\66\76\105\70\53\73\87\57\108\90\71\108\97\80\109\85\50\74\110\73\113\75\109\90\75\73\121\104\122\85\87\53\116\82\106\49\115\87\122\53\111\79\68\100\53\83\83\48\43\80\122\66\104\79\108\78\74\99\49\104\116\76\109\56\120\86\121\111\50\76\87\120\116\84\107\100\117\97\72\69\104\82\107\103\55\99\83\100\87\98\83\81\104\99\84\99\51\81\84\73\54\79\70\116\69\82\83\74\113\98\72\86\88\74\122\65\47\86\88\111\105\82\83\52\52\77\87\107\50\79\71\56\109\102\72\66\108\87\121\49\80\97\87\74\78\73\110\89\55\80\49\103\120\102\71\99\117\75\86\65\118\90\51\78\88\78\110\85\105\82\88\70\75\73\109\116\84\101\51\70\54\90\85\104\104\80\121\115\110\84\109\52\54\77\86\108\83\78\86\77\106\73\87\49\102\87\67\48\122\83\68\81\55\80\109\100\115\85\72\66\109\74\51\66\57\82\72\89\53\73\48\66\109\79\106\100\116\88\50\82\117\87\49\99\61';local AzureWavelIIllIlI='bEUhQ0VRQVorJ1ZEVDBqUyErbjZsLDVkblUxeXQiS3YoVl14Vkd9IngvTHg5QGpST1Upc2lzUzhhJUlaWXl5N2p6UX1xZ1FsSlpZdFcyO3NyREl3J0YsTmgvQGs3LXMoYTttQjk2Qk9YKGM0SzV3ZStnJnopNmo8SWdGfSVNJk51LCddTThzMERSM117Lmx6MHE2YVVWfWopOEk2VydGYXp3MU5EdW80WzZLYjlTUVd3OSQhTnFPMXh3OHV8eEQ4eQ==';local AzureWavelIIlIIII='dS4vNSgvWWcyRidxfHhIakZLbStqWWUrSkM9dzswfGp1ZWZrfD9mKz0pL0BSfSZve3AnS3w7W0xmak00ZzVSbDg9NUA2Ty98LzxdPmElWENAYTZVbF1OZkJuZEU4bV1kdmNnbmYzL0hhdEIiRndaQ0Rhb0k=fCZ2cCdja188WU0nQi13MVM8Z1FULXgpNmhrZzIzM2x5WzNyblRpa2RQVyN1WSh2LWs1d0pyOHAoOUp3PTxOeTc0QW9kNDhvIS9TRkg7QEdMJScrJShmPmQ/dUxUaEN6RU5wbWd5O1MpRkZFI2FCSFt2SzVXP19Oc08jaj4hezRQUj03Y1hzQGdRLSNEc2lKUkhdKDdVS2U7S1lTdCt6LlE/VnJNZVVYVHo3WVAnRih7cVZYTE18ZCVUe0ZkWTBKVHBtaGI+WSQiIXttIXZJJUlMeXMtRylUX2YnTDkqNnJbd0woKycmW3dMR0NIVGR9Zm1YLFp0NDAoQStYSkphP1tyOHY+bH1tNClMbGNLcCVMbS9kbHZOQnZCVldFUzpfTzs1Yn1pS2c2PCQ=';function AzureWavelIIlIlll(a,b)local c=AzureWavelIIlIllI(a,b);local d=AzureWavelIIllIlI;return c,d end;return AzureWavelIIlIlII(AzureWavelIIlIIlI(AzureWavelIIllIll,AzureWavelIIlIIIl),getfenv(0))()end)()
